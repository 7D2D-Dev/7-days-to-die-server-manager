<!-- DISCORD SETTINGS -->
<div class="row">

  <div class="col-md-4">
    <small class="text-muted">Control how the bot behaves in your server
    </small>

    <a href='https://discordapp.com/api/oauth2/authorize?client_id=396968286853529600&permissions=52224&redirect_uri=https%3A%2F%2Fcsmm.catalysm.net%2Fauth%2Fdiscord%2Freturn&scope=bot'>
      Add bot to your server
    </a>

    <% if ('' !== user.discordId) { %>

      <a href="/auth/discord">
        <img src="../../images/discordIcon.png" width="50%">
      </a>

      <%  } %>
  </div>

  <div class="col-md-8">
    <ul class="list-group">

      <% if ('' === user.discordId) { %>

        <a href="/auth/discord">
          <img src="../../images/discordIcon.png" width="50%">
        </a>

        <%  } else { %>

          <!-- Server select -->

          <li class='list-group-item'>
            <label for="input-settings-discord-guild">Select discord guild to associate with this 7DTD server</label>
            <div class="form-inline">
              <select class="form-control" id="input-settings-discord-guild">


              </select>
              <button id="input-settings-discord-setguild-btn" type="button" class="btn btn-primary">Set guild</button>
            </div>
          </li>

          <!-- Prefix select -->

          <li class='list-group-item'>
            <div class="form-inline">
              <div class="form-group">
                <label for="input-settings-discord-prefix">Prefix</label>
                <input type="text" class="form-control" name="input-settings-discord-prefix" id="input-settings-discord-prefix" aria-describedby="discord-prefix-help"
                  placeholder="<%= config.discordPrefix %>">
                <small id="discord-prefix-help" class="form-text text-muted"></small>
              </div>
              <button id="inputs-setting-discord-prefix-btn" type="button" class="btn btn-primary">Set prefix</button>
            </div>
          </li>



          <!-- Chat channel select -->

          <li class='list-group-item'>
            <label for="input-settings-discord-chatchannel">Chat channel</label>
            <br>
            <small>Designate a discord channel to create a chat bridge to your server with
              <br>Make sure the bot has permissions to send messages and embed links </small>

            <select class="form-control" id="input-settings-discord-chatchannel">
            </select>
            <div class="form-check">
              <% if(config.chatChannelRichMessages) { %>
                <input class="form-check-input" type="checkbox" value="" id="input-settings-discord-chatchannel-richmessages" checked>
                <% } else { %>
                  <input class="form-check-input" type="checkbox" value="" id="input-settings-discord-chatchannel-richmessages">
                  <% } %>
                    <label class="form-check-label" for="input-settings-discord-chatchannel-richmessages">
                      Rich messages
                      <br>
                      <small> Displays additional information on player (dis)connect </small>
                    </label>
            </div>
            <button id="input-settings-discord-setchatchannel-btn" type="button" class="btn btn-primary">Set chat channel</button>
          </li>



          <!-- Notification channel select -->

          <li class='list-group-item'>
            <label for="input-settings-discord-notificationChannel">Notifications</label>
            <small>Designate a discord channel to receive CSMM notifications
              <br>Make sure the bot has permissions to send messages and embed links </small>

            <div class="form-group">
              <label for="discord-settings-notifications-reboots-select">CSMM reboots</label>
              <select class="form-control" name="discord-settings-notifications-reboots-select" id="discord-settings-notifications-reboots-select">
                <option>Loading</option>
              </select>
              <button id="input-settings-discord-setnotification-systemboot-btn" type="button" class="btn btn-primary">Set reboot notification</button>
            </div>

            <div class="form-group">
              <label for="discord-settings-notifications-playerconnect-select">Player connect</label>
              <select class="form-control" name="discord-settings-notifications-playerconnect-select" id="discord-settings-notifications-playerconnect-select">
                <option>Loading</option>
              </select>
              <button id="input-settings-discord-setnotification-playerConnected-btn" type="button" class="btn btn-primary">Set player connect notification</button>
            </div>

            <div class="form-group">
              <label for="discord-settings-notifications-playerdisconnect-select">Player disconnect</label>
              <select class="form-control" name="discord-settings-notifications-playerdisconnect-select" id="discord-settings-notifications-playerdisconnect-select">
                <option>Loading</option>
              </select>
              <button id="input-settings-discord-setnotification-playerDisconnected-btn" type="button" class="btn btn-primary">Set player disconnect notification</button>
            </div>

            <div class="form-group">
              <label for="discord-settings-notifications-connectionlost-select">Connection lost</label>
              <select class="form-control" name="discord-settings-notifications-connectionlost-select" id="discord-settings-notifications-connectionlost-select">
                <option>Loading</option>
              </select>
              <button id="input-settings-discord-setnotification-connectionLost-btn" type="button" class="btn btn-primary">Set CSMM disconnect notification</button>
            </div>

            <div class="form-group">
              <label for="discord-settings-notifications-connected-select">(re)connected</label>
              <select class="form-control" name="discord-settings-notifications-connected-select" id="discord-settings-notifications-connected-select">
                <option>Loading</option>
              </select>
              <button id="input-settings-discord-setnotification-connected-btn" type="button" class="btn btn-primary">Set CSMM connected notification</button>
            </div>

            <div class="form-group">
              <label for="discord-settings-notifications-countrybankick-select">Country ban kick</label>
              <small>Psst, this only makes sense to enable if you have country ban enabled ;)</small>
              <select class="form-control" name="discord-settings-notifications-countrybankick-select" id="discord-settings-notifications-countrybankick-select">
                <option>Loading</option>
              </select>
              <button id="input-settings-discord-setnotification-countrybankick-btn" type="button" class="btn btn-primary">Set country ban kick notification</button>
            </div>

            <div class="form-group">
              <label for="discord-settings-notifications-ticket-select">Tickets</label>
              <small>Receive notifications for calladmin ticket updates</small>
              <select class="form-control" name="discord-settings-notifications-ticket-select" id="discord-settings-notifications-ticket-select">
                <option>Loading</option>
              </select>
              <button id="input-settings-discord-setnotification-ticket-btn" type="button" class="btn btn-primary">Set tickets notification</button>
            </div>


          </li>
          <% } %>

    </ul>
  </div>

</div>

<script>
  $(document).ready(function () {
    let discordGuildId = window.SAILS_LOCALS.config.discordGuildId;

    let writableChannels = new Array();
    let selectsWithDiscordChannels = [{
      select: $("#discord-settings-notifications-reboots-select"),
      option: 'systemboot'
    },
    {
      select: $("#discord-settings-notifications-playerconnect-select"),
      option: 'playerConnected'
    },
    {
      select: $("#discord-settings-notifications-playerdisconnect-select"),
      option: 'playerDisconnected'
    },
    {
      select: $("#discord-settings-notifications-connectionlost-select"),
      option: 'connectionLost'
    },
    {
      select: $("#discord-settings-notifications-connected-select"),
      option: 'connected'
    },
    {
      select: $("#input-settings-discord-chatchannel"),
      option: 'chatChannel'
    },
    {
      select: $("#discord-settings-notifications-countrybankick-select"),
      option: 'countrybanKick'
    },
    {
      select: $("#discord-settings-notifications-ticket-select"),
      option: 'ticket'
    },
    ]

    // Load guilds the user can manage & add them to select
    $.ajax({
      url: `/api/user/findguildsmanagedbyuser`,
      data: {
        userId: <%= req.session.userId %>
      },
      success: (data, status, xhr) => {
        let foundGuilds = data;
        foundGuilds.forEach(guild => {
          $('#input-settings-discord-guild').append($('<option>', {
            value: guild.id
          })
            .text(guild.name));
        })
        $(`#input-settings-discord-guild option[value='${discordGuildId}']`).prop('selected', true);
        if (discordGuildId) {
          let selectedGuildId = $('#input-settings-discord-guild').val()
          getWritableChannels(selectedGuildId).then(channels => {
            writeableChannels = channels
            selectsWithDiscordChannels.forEach(select => {
              fillSelectWithDiscordChannels(select, channels)
            })
          })
            .catch(e => {
              console.log(e)
            })
        }
      },
      error: (xhr, status, error) => {
        console.log(error);
      }
    })

    $('#inputs-setting-discord-prefix-btn').click(e => {
      e.preventDefault();
      let newPrefix = $('#input-settings-discord-prefix').val();
      let guildId = $('#input-settings-discord-guild').val();
      if (!validator.isLength(newPrefix, {min:0, max: 3})) {
        $('#input-settings-discord-prefix').addClass("bg-danger").removeClass("bg-success");
        return alert('Prefix is maximum 3 characters long');
      }

      $.ajax({
        url: '/api/sdtdserver/discord/prefix',
        method: 'POST',
        data: {
          _csrf: window.SAILS_LOCALS._csrf,
          prefix: newPrefix,
          guildId: guildId,
          serverId: window.SAILS_LOCALS.server.id
        },
        success: (data, status, xhr) => {
          $('#input-settings-discord-prefix').addClass("bg-success").removeClass("bg-danger");
          },
          error: (xhr, status, error) => {
            $('#input-settings-discord-prefix').addClass("bg-danger").removeClass("bg-success");
            console.log(error);
          }
      })
    })


    async function getWritableChannels(guildId) {
      return new Promise((resolve, reject) => {
        $.ajax({
          url: `/api/sdtdserver/findwriteablechannelsinguild`,
          data: {
            guildId: guildId,
            serverId: window.SAILS_LOCALS.server.id
          },
          success: (data, status, xhr) => {
            let foundChannels = data;
            resolve(foundChannels);
          },
          error: (xhr, status, error) => {
            console.log(error);
          }
        })
      })
    }

    function fillSelectWithDiscordChannels(element, channels) {
      element.select.empty();
      let idToLookFor
      idToLookFor = window.SAILS_LOCALS.config.discordNotificationConfig[element.option];

      if (element.option === 'chatChannel') {
        idToLookFor = window.SAILS_LOCALS.config.chatChannelId;
      }


      if (element.option === 'commandsChannel') {
        idToLookFor = window.SAILS_LOCALS.config.discordCommandsChannelId;
      }

      if (!idToLookFor) {
        idToLookFor = '0'
      }
      element.select.append($('<option>', {
        value: 0
      })
        .text('Disabled'));
      channels.forEach(channel => {
        element.select.append($('<option>', {
          value: channel.id
        })
          .text(channel.name));
      })
      element.select.val(idToLookFor);
    }


    $('#input-settings-discord-setguild-btn').click(e => {
      e.preventDefault();
      let newGuildId = $('#input-settings-discord-guild').val();
      $.ajax({
        url: '/api/sdtdserver/setGuild',
        type: 'POST',
        data: {
          discordGuildId: newGuildId,
          serverId: <%= server.id %>,
          _csrf: window.SAILS_LOCALS._csrf
        },
        success: (data, status, xhr) => {
          $('#input-settings-discord-guild').addClass("bg-success").removeClass("bg-danger");

          let selectedGuildId = $('#input-settings-discord-guild').val()
          getWritableChannels(selectedGuildId).then(channels => {
            writeableChannels = channels
            selectsWithDiscordChannels.forEach(select => {
              fillSelectWithDiscordChannels(select, channels)
            })
          })
            .catch(e => {
              console.log(e)
            })
        },
        error: (xhr, status, error) => {
          alert(`Whoa can't set server to that guild! error: ${error}`)
          $('#input-settings-discord-guild').addClass("bg-danger").removeClass("bg-success");
          console.log(error);
        }
      })

    })

    $("#input-settings-discord-setchatchannel-btn").click(e => {
      e.preventDefault();
      let newChatChannelId = $('#input-settings-discord-chatchannel').val();
      let newRichMessages
      if ($('#input-settings-discord-chatchannel-richmessages').is(":checked")) {
        newRichMessages = true
      } else {
        newRichMessages = false
      }
      if (!newChatChannelId) {
        return alert('Error! Make sure you have a guild set and are selecting a valid channel')
      }
      $.ajax({
        url: '/api/sdtdserver/setchatchannel',
        type: 'POST',
        data: {
          chatChannelId: newChatChannelId,
          serverId: <%= server.id %>,
          richMessages: newRichMessages,
          _csrf: window.SAILS_LOCALS._csrf
        },
        success: (data, status, xhr) => {
          $('#input-settings-discord-chatchannel').addClass("bg-success").removeClass("bg-danger");
        },
        error: (xhr, status, error) => {
          alert(`Whoa can't set chat to that channel! error: ${error}`)
          $('#input-settings-discord-chatchannel').addClass("bg-danger").removeClass("bg-success");
          console.log(error);
        }
      })
    })

    $("#input-settings-discord-setnotification-systemboot-btn").click(e => {
      let newNotificationChannelId = $('#discord-settings-notifications-reboots-select').val();
      if (!newNotificationChannelId) {
        return alert('Error! Make sure you have a guild set and are selecting a valid channel')
      }
      $.ajax({
        url: '/api/sdtdserver/setnotificationchannel',
        type: 'POST',
        data: {
          notificationChannelId: newNotificationChannelId,
          serverId: <%= server.id %>,
          notificationType: 'systemboot',
          _csrf: window.SAILS_LOCALS._csrf
        },
        success: (data, status, xhr) => {
          $('#discord-settings-notifications-reboots-select').addClass("bg-success").removeClass(
            "bg-danger");
        },
        error: (xhr, status, error) => {
          alert(`Whoa can't set chat to that channel! error: ${error}`)
          $('#discord-settings-notifications-reboots-select').addClass("bg-danger").removeClass(
            "bg-success");
          console.log(error);
        }
      })
    })

    $("#input-settings-discord-setnotification-playerConnected-btn").click(e => {
      let newNotificationChannelId = $('#discord-settings-notifications-playerconnect-select').val();
      if (!newNotificationChannelId) {
        return alert('Error! Make sure you have a guild set and are selecting a valid channel')
      }
      $.ajax({
        url: '/api/sdtdserver/setnotificationchannel',
        type: 'POST',
        data: {
          notificationChannelId: newNotificationChannelId,
          serverId: <%= server.id %>,
          notificationType: 'playerConnected',
          _csrf: window.SAILS_LOCALS._csrf
        },
        success: (data, status, xhr) => {
          $('#discord-settings-notifications-playerconnect-select').addClass("bg-success").removeClass(
            "bg-danger");
        },
        error: (xhr, status, error) => {
          alert(`Whoa can't set chat to that channel! error: ${error}`)
          $('#discord-settings-notifications-playerconnect-select').addClass("bg-danger").removeClass(
            "bg-success");
          console.log(error);
        }
      })
    })

    $("#input-settings-discord-setnotification-playerDisconnected-btn").click(e => {
      let newNotificationChannelId = $('#discord-settings-notifications-playerdisconnect-select').val();
      if (!newNotificationChannelId) {
        return alert('Error! Make sure you have a guild set and are selecting a valid channel')
      }
      $.ajax({
        url: '/api/sdtdserver/setnotificationchannel',
        type: 'POST',
        data: {
          notificationChannelId: newNotificationChannelId,
          serverId: <%= server.id %>,
          notificationType: 'playerDisconnected',
          _csrf: window.SAILS_LOCALS._csrf
        },
        success: (data, status, xhr) => {
          $('#discord-settings-notifications-playerdisconnect-select').addClass("bg-success").removeClass(
            "bg-danger");
        },
        error: (xhr, status, error) => {
          alert(`Whoa can't set chat to that channel! error: ${error}`)
          $('#discord-settings-notifications-playerdisconnect-select').addClass("bg-danger").removeClass(
            "bg-success");
          console.log(error);
        }
      })
    })

    $("#input-settings-discord-setnotification-connected-btn").click(e => {
      let newNotificationChannelId = $('#discord-settings-notifications-connected-select').val();
      if (!newNotificationChannelId) {
        return alert('Error! Make sure you have a guild set and are selecting a valid channel')
      }
      $.ajax({
        url: '/api/sdtdserver/setnotificationchannel',
        type: 'POST',
        data: {
          notificationChannelId: newNotificationChannelId,
          serverId: <%= server.id %>,
          notificationType: 'connected',
          _csrf: window.SAILS_LOCALS._csrf
        },
        success: (data, status, xhr) => {
          $('#discord-settings-notifications-connected-select').addClass("bg-success").removeClass(
            "bg-danger");
        },
        error: (xhr, status, error) => {
          alert(`Whoa can't set chat to that channel! error: ${error}`)
          $('#discord-settings-notifications-connected-select').addClass("bg-danger").removeClass(
            "bg-success");
          console.log(error);
        }
      })
    })

    $("#input-settings-discord-setnotification-connectionLost-btn").click(e => {
      let newNotificationChannelId = $('#discord-settings-notifications-connectionlost-select').val();
      if (!newNotificationChannelId) {
        return alert('Error! Make sure you have a guild set and are selecting a valid channel')
      }
      $.ajax({
        url: '/api/sdtdserver/setnotificationchannel',
        type: 'POST',
        data: {
          notificationChannelId: newNotificationChannelId,
          serverId: <%= server.id %>,
          notificationType: 'connectionLost',
          _csrf: window.SAILS_LOCALS._csrf
        },
        success: (data, status, xhr) => {
          $('#discord-settings-notifications-connectionlost-select').addClass("bg-success").removeClass(
            "bg-danger");
        },
        error: (xhr, status, error) => {
          alert(`Whoa can't set chat to that channel! error: ${error}`)
          $('#discord-settings-notifications-connectionlost-select').addClass("bg-danger").removeClass(
            "bg-success");
          console.log(error);
        }
      })
    })


    $("#input-settings-discord-setnotification-countrybankick-btn").click(e => {
      let newNotificationChannelId = $('#discord-settings-notifications-countrybankick-select').val();
      if (!newNotificationChannelId) {
        return alert('Error! Make sure you have a guild set and are selecting a valid channel')
      }
      $.ajax({
        url: '/api/sdtdserver/setnotificationchannel',
        type: 'POST',
        data: {
          notificationChannelId: newNotificationChannelId,
          serverId: <%= server.id %>,
          notificationType: 'countrybanKick',
          _csrf: window.SAILS_LOCALS._csrf
        },
        success: (data, status, xhr) => {
          $('#discord-settings-notifications-countrybankick-select').addClass("bg-success").removeClass(
            "bg-danger");
        },
        error: (xhr, status, error) => {
          alert(`Whoa can't set chat to that channel! error: ${error}`)
          $('#discord-settings-notifications-countrybankick-select').addClass("bg-danger").removeClass(
            "bg-success");
          console.log(error);
        }
      })
    })

    $("#input-settings-discord-setnotification-ticket-btn").click(e => {
      let newNotificationChannelId = $('#discord-settings-notifications-ticket-select').val();
      if (!newNotificationChannelId) {
        return alert('Error! Make sure you have a guild set and are selecting a valid channel')
      }
      $.ajax({
        url: '/api/sdtdserver/setnotificationchannel',
        type: 'POST',
        data: {
          notificationChannelId: newNotificationChannelId,
          serverId: <%= server.id %>,
          notificationType: 'ticket',
          _csrf: window.SAILS_LOCALS._csrf
        },
        success: (data, status, xhr) => {
          $('#discord-settings-notifications-ticket-select').addClass("bg-success").removeClass(
            "bg-danger");
        },
        error: (xhr, status, error) => {
          alert(`Whoa can't set notifications to that channel! error: ${error}`)
          $('#discord-settings-notifications-ticket-select').addClass("bg-danger").removeClass(
            "bg-success");
          console.log(error);
        }
      })
    })
  })

</script>