<%- exposeLocalsToBrowser() %>

    <div>
        <h1>Player tracking</h1>
        <input name="tracking-player-btn" id="tracking-player-btn" class="btn btn-primary btn-lg" type="button" value="Get data">

        <div class="form-group">
            <label for="player-name-select">Tracking player</label>
            <select class="form-control" name="player-name-select" id="player-name-select">

                <% players.forEach(player => { %>

                    <option value="<%= player.id %>">
                        <%= player.name %>
                    </option>

                    <% }) %>

            </select>
        </div>


        <div id="narrow-down">

            <label for="datepicker">Narrow down data</label>
            <input type="text" name="datetimes" />

        </div>

        <hr>
        <div>
            <p id="loaded-data"> Click "Get data" to get started!</p>
            <p id="daterange-data"></p>

        </div>
        <hr>

        <h2>Location</h2>
        <div id="sdtdMap">


        </div>

        <hr>

        <h2>Inventory</h2>

        <table id="inventoryTable" class="table table-striped table-bordered dataTable no-footer">

            <thead>
                <tr>
                    <th>Date/time</th>
                    <th>Item name</th>
                    <th>Quality</th>
                    <th>Amount</th>
                </tr>
            </thead>

        </table>


    </div>

    <style>
        #sdtdMap {
            height: 60em;
            width: 100%;
        }
    </style>


    <script>

        const server = window.SAILS_LOCALS.server;
        let trackingMap
        let inventoryDataTable
        $(document).ready(() => {

            // Data control

            $('#tracking-player-btn').click(e => {
                $("#loaded-data").html(`<i class="fas fa-spinner spin"></i>`)

                getDataAndUpdate();
            })

            $('#narrow-down').hide();

            $('input[name="datetimes"]').daterangepicker({
                timePicker: true,
                startDate: moment().startOf('hour'),
                endDate: Date.now(),
            });

            $('input[name="datetimes"]').on('apply.daterangepicker', function (ev, picker) {
                $("#loaded-data").html(`<i class="fas fa-spinner spin"></i>`)
                getDataAndUpdate(picker.startDate.toDate().valueOf(), picker.endDate.toDate().valueOf());

            });

            // Map
            trackingMap = new sdtdMap($("#sdtdMap"))

            // Inventory

            inventoryDataTable = $("#inventoryTable").DataTable({
                dom: 'Bfrtip',
                fixedHeader: true,
                responsive: true,
                buttons: [
                    'copy', 'excel', 'pdf', 'print'
                ],
                columns: [{
                    data: "createdAt",
                    render: function (data, type, row, meta) {
                        let date = new Date(data);
                        return `${date.toLocaleDateString()} - ${date.toLocaleTimeString()}`;
                    }
                },
                {
                    data: 'itemName'
                },
                {
                    data: 'quality'
                },
                {
                    data: 'amount'
                },
                ]
            })

        });

        function getDataAndUpdate(begin, end) {
            let playerId = $("#player-name-select").val();

            $.get('/api/sdtdserver/tracking', { serverId: server.id, playerId: playerId, beginDate: begin, endDate: end }, data => {

                if (data.length === 0) {
                    return alert('No data found for this player.')
                }

                $("#loaded-data").text(`${data.length} datapoints loaded`);


                let oldest = new Date(data[0].createdAt);
                let newest = new Date(data[data.length - 1].createdAt);
                $("#daterange-data").text(`Oldest: ${oldest.toLocaleDateString()} ${oldest.toLocaleTimeString()} Newest: ${newest.toLocaleDateString()} ${newest.toLocaleTimeString()}`);

                $('input[name="datetimes"]').data('daterangepicker').setStartDate(oldest);
                $('input[name="datetimes"]').data('daterangepicker').setEndDate(newest);

                $('#narrow-down').show();


                trackingMap.drawPlayers(window.SAILS_LOCALS.players.filter(player => player.id === parseInt(playerId)), data);
                refreshDataTable(data, inventoryDataTable)
            })
        }

        function refreshDataTable(trackingInfo, dataTable) {
            dataTable.clear();

            let parsedDataForTable = new Array();

            for (const record of trackingInfo) {
                if (record.inventory) {
                    for (const inventoryItem of record.inventory) {
                        let parsedData = {
                            createdAt: record.createdAt,
                            itemName: inventoryItem.name,
                            amount: inventoryItem.count,
                            quality: inventoryItem.quality
                        };
                        parsedDataForTable.push(parsedData);

                    }
                }
            }
            dataTable.rows.add(parsedDataForTable);
            dataTable.draw()

        }

    </script>