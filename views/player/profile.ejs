<body>

  <div class="container-fluid">

    <nav aria-label="breadcrumb">
      <ol class="breadcrumb">
        <li class="breadcrumb-item">
          <a href="<%= '/user/' + req.session.userId + '/dashboard' %>"> Dashboard </a>
        </li>
        <li class="breadcrumb-item">
          <a href="<%= '/sdtdserver/' + server.id + '/dashboard' %>">
            <%= server.name %>
          </a>
        </li>
        <li class="breadcrumb-item">
          <a href="<%= '/sdtdserver/' + server.id + '/players' %>">
            Players
          </a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">
          <%= player.name %>
        </li>
      </ol>
    </nav>

    <% if (player.static) { %>
    <div class="alert alert-warning" role="alert">
      CSMM could not load data for this player from your server. The data you see is old and hasn't been updated since
      the player was last online. If you did a map/server wipe, this could be a player that has not logged in since
      that. You can still edit this players role, economy and other settings.
    </div>

    <% } %>


    <div class="card-columns">

      <div class="card">
        <div class="card-body">
          <h4 class="card-title text-center">
            <%= player.name %>
          </h4>
          <p class="card-text">
            <div class="container">

              <div class="row">
                <div class="col-lg-6">
                  <img alt="player profile picture" src="<%= player.avatarUrl %>" style='border-radius: 50%;' />
                </div>
                <div class="col-lg-3">
                  <div class="btn-group btn-group-vertical">

                    <% if (player.banned) { %>
                    <%- include("./partials/unbanPlayerButton", {player: player}) %>
                    <% } else { %>

                    <%- include("./partials/banPlayerButton", {player: player}) %>
                    <%- include("./partials/kickPlayerButton", {player: player}) %>
                    <%- include("./partials/teleportPlayerButton", {player: player}) %>
                    <%- include("./partials/giveItemButton", {player: player}) %>
                    <% } %>
                    <%- include("./partials/setMoneyButton", {player: player}) %>
                    <%- include("./partials/deletePlayerButton", {player: player}) %>
                  </div>
                </div>
                <div class="col-lg-3">

                  <div class="form-group text-center">
                    <label for="player-role-select">Role</label>
                    <select class="form-control" name="player-role-select" id="player-role-select">

                    </select>
                  </div>

                  <button type="button" id="set-role-btn" class="btn btn-primary">Set</button>

                </div>
              </div>
            </div>
          </p>
        </div>
      </div>

      <div class="card">
        <div class="card-body">
          <h4 class="card-title">Global bans</h4>
          <p class="card-text">

            <a href="/gbl/profile?steamId=<%= player.steamId %>">GBL profile</a>

            <% if(bans.length > 0) { %>

            <div class="alert alert-warning" role="alert">
              <strong>Players can get banned for unfair reasons! Take this information and make a good decision.
              </strong>
            </div>


            <table class="table table-striped table-bordered dataTable no-footer">
              <thead>
                <th>Reason</th>
                <th>Note</th>
                <th>Until</th>
              </thead>

              <tbody>

                <% bans.forEach(banEntry => { %>

                <tr>
                  <td scope="row">
                    <%= banEntry.reason %>
                  </td>
                  <td>
                    <%= banEntry.note %>
                  </td>
                  <td>
                    <% let bannedUntil = new Date(banEntry.bannedUntil) %>
                    <%= bannedUntil.toDateString() %>
                    <%= bannedUntil.toTimeString() %>
                  </td>
                </tr>



                <% }) %>

              </tbody>
            </table>

            <% } else { %>

            <p> Did not find any bans for this player :) </p>
            <% } %>
          </p>
        </div>
      </div>



      <div class="card">
        <div class="card-header">
          Info
        </div>
        <div class="card-body">

          <p class="card-text">
            <table class="table table-striped table-bordered dataTable no-footer">

              <tbody>

                <tr>
                  <td scope="row">Steam ID</td>
                  <td>
                    <%= player.steamId %>
                  </td>
                </tr>

                <tr>
                  <td scope="row">Entity ID</td>
                  <td>
                    <%= player.entityId %>
                  </td>
                </tr>

                <tr>
                  <td scope="row">IP</td>
                  <td>
                    <%= player.ip %>
                  </td>
                </tr>

                <tr>
                  <td scope="row">Country</td>
                  <td>
                    <% if (player.country) { %>
                    <% let lowerCaseCountry = player.country.toLowerCase(); %>
                    <img src="../../images/flags/blank.gif" class="flag flag-<%= lowerCaseCountry %>" />
                    <%= player.country %>
                    <% } %>
                  </td>
                </tr>

                <tr>
                  <td scope="row">Location</td>
                  <td>
                    <%= player.positionX %>
                    <%= player.positionY %>
                    <%= player.positionZ %>
                  </td>
                </tr>

                <tr>
                  <td scope="row">Playtime</td>
                  <td>
                    <%= player.playtimeHHMMSS %>
                  </td>
                </tr>

                <tr>
                  <td scope="row">Last online</td>
                  <td>
                    <% let lastOnlineDate = new Date(player.lastOnline) %>
                    <% let lastOnlineString = `${lastOnlineDate.toDateString()} ${lastOnlineDate.toTimeString()}` %>
                    <%= lastOnlineString %>
                  </td>
                </tr>

                <tr>
                  <td scope="row">Ban status</td>
                  <td>
                    <%= player.banned %>
                  </td>
                </tr>

                <tr>
                  <td scope="row">Level</td>
                  <td>
                    <%= player.level %>
                  </td>
                </tr>

                <tr>
                  <td scope="row">Deaths</td>
                  <td>
                    <%= player.deaths %>
                  </td>
                </tr>

                <tr>
                  <td scope="row">Score</td>
                  <td>
                    <%= player.score %>
                  </td>
                </tr>

                <tr>
                  <td scope="row">Zombie kills</td>
                  <td>
                    <%= player.zombieKills %>
                  </td>
                </tr>

                <tr>
                  <td scope="row">Player kills</td>
                  <td>
                    <%= player.playerKills %>
                  </td>
                </tr>

                <tr>
                  <td scope="row">CSMM currency balance</td>
                  <td>
                    <%= player.currency %>
                  </td>
                </tr>

                <tr>
                  <td scope="row">Teleports</td>
                  <td>
                    <table class="table table-striped table-bordered dataTable no-footer">
                      <thead>
                        <tr>
                          <th>Name</th>
                          <th>Location</th>
                        </tr>
                      </thead>
                      <tbody id='player-teleport-locations'>
                      </tbody>
                    </table>
                  </td>
                </tr>


              </tbody>
            </table>
          </p>
        </div>

      </div>
    </div>

    <hr>

    <div class="card-columns">

      <div class="card">
        <div class="card-body">
          <h4 class="card-title">Inventory</h4>
          <p class="card-text">
            <%- include('./partials/playerInventory', {player: player}) %>
          </p>
        </div>
      </div>

      <div class="card">
        <div class="card-body">
          <h4 class="card-title">Logs</h4>
          <p class="card-text">
            <table id='player-historicalInfo-table' class="table table-striped table-bordered dataTable no-footer">
              <thead>
                <tr>
                  <th>Date</th>
                  <th>Time</th>
                  <th>Message</th>
                  <th>Amount</th>
                </tr>
              </thead>

            </table>
          </p>
        </div>
      </div>

    </div>

  </div>
</body>

<script>
  $(document).ready(function () {


    drawRolesSelect();
    updateTeleportLocations()

    let historicalInfo = window.SAILS_LOCALS.historicalInfo;
    let historicalInfoTable = $('#player-historicalInfo-table').DataTable({
      data: window.SAILS_LOCALS.historicalInfo,
      dom: 'Bfrtip',
      fixedHeader: true,
      responsive: true,
      buttons: [
        'copy', 'excel', 'pdf', 'print'
      ],
      order: [
        [0, 'desc'],
        [1, 'desc']
      ],
      columns: [{
          data: "createdAt",
          render: function (data, type, row, meta) {
            let date = new Date(data)
            return `${date.toDateString()}`
          }
        },
        {
          data: 'createdAt',
          render: function (data, type, row, meta) {
            let date = new Date(data)
            return `${date.toTimeString()}`
          }
        },
        {
          data: 'message'
        },
        {
          data: 'amount'
        },
      ]
    })

    $("#set-role-btn").click(e => {
      let newRoleId = $("#player-role-select option:selected").val();

      if (newRoleId === "None") {
        $.ajax({
          url: "/api/role/player",
          type: 'DELETE',
          data: {
            serverId: window.SAILS_LOCALS.server.id,
            _csrf: window.SAILS_LOCALS._csrf,
            playerId: window.SAILS_LOCALS.player.id
          },
          success: (data, status, xhr) => {
            window.location.reload();
          },
          error: (xhr, status, error) => {
            alert('Error editing role, check browser console for more info.')
            console.log(xhr);
          }
        })
      } else {

        $.ajax({
          url: "/api/role/player",
          type: 'POST',
          data: {
            serverId: window.SAILS_LOCALS.server.id,
            _csrf: window.SAILS_LOCALS._csrf,
            roleId: newRoleId,
            playerId: window.SAILS_LOCALS.player.id
          },
          success: (data, status, xhr) => {
            window.location.reload();
          },
          error: (xhr, status, error) => {
            if (xhr.responseJSON.error) {
              window.SAILS_LOCALS.error = xhr.responseJSON.error
            } else {
              window.SAILS_LOCALS.error = undefined;
            }
            $("#error-modal").modal('show');
            console.log(xhr);
          }
        })

      }

    })

    function updateTeleportLocations() {
      let playerId = window.SAILS_LOCALS.player.id;
      $.get('/api/player/teleports', {
        playerId: playerId
      }, teleportLocations => {
        teleportLocations.forEach(teleport => {
          let teleportHtml =
            `<tr><td>${teleport.name}</td><td>${teleport.x},${teleport.y},${teleport.z}</td></tr>`
          $("#player-teleport-locations").append(teleportHtml)

        })
      })
    }

    function drawRolesSelect() {

      $.get('/api/role', {
        serverId: window.SAILS_LOCALS.server.id
      }, roles => {
        $("#player-role-select").empty();
        roles = _.sortBy(roles, ["level"]);
        let playerHasRole = false;
        for (const role of roles) {
          let content
          if (window.SAILS_LOCALS.player.role === role.id) {
            content = `<option value="${role.id}" selected>${role.name}</option>`;
            playerHasRole = true
          } else {
            content = `<option value="${role.id}">${role.name}</option>`;
          }

          $("#player-role-select").append(content);
        }

        if (!playerHasRole) {
          $("#player-role-select").append("<option selected>None</option>");
        } else {
          $("#player-role-select").append("<option>None</option>");
        }
      })

    }
  })

</script>
