<%- exposeLocalsToBrowser() %>

  <div id="list-of-owned-servers" aria-multiselectable="true">


    <table class="table table-hover} table-responsive">
      <thead class="thead-inverse">
        <tr>
          <th>ID</th>
          <th>Name</th>
          <th>Online players</th>
          <th>FPS</th>
          <th>Dashboard</th>
          <th>Settings</th>
        </tr>
      </thead>
      <tbody>


        <% ownedServers.forEach(server => { %>

          <tr>
            <td scope="row">
              <%= server.id %>
            </td>
            <td>
              <%= server.name %>
            </td>
            <% let playersId = `server-${server.id}-players` %>
              <td id=<%= playersId %>>
                Loading
              </td>
              <% let fpsId = `server-${server.id}-fps` %>
                <td id=<%= fpsId %>>Loading</td>
                <td>
                  <% const dashboardLink = '/sdtdserver/' + server.id + '/dashboard' %>
                    <a href='<%= dashboardLink %>' class="btn btn-default btn-primary">
                      <em class="glyphicon glyphicon-align-justify"></em>
                      Dashboard
                    </a>
                </td>
                <td>
                  <% const settingsLink = '/sdtdserver/' + server.id + '/settings' %>
                    <a href='<%= settingsLink %>' class="btn btn-default btn-primary">
                      <em class="glyphicon glyphicon-align-justify"></em>
                      <i class="fa fa-cog" aria-hidden="true"></i> Settings
                    </a>
                </td>
          </tr>
          <% }) %>


      </tbody>
    </table>



  </div>

  <script>
    $(document).ready(function () {

      let listOfServers = window.SAILS_LOCALS.ownedServers


      setInterval(function () {
        listOfServers.forEach(server => {
          sendRequestAndUpdateFps(server)
        })
      }, 1000)

      listOfServers.forEach(server => {
        sendRequestAndUpdateFps(server)
        io.socket.get('/sdtdserver/' + server.id + '/socket', function (response) {
          sendRequestAndUpdatePlayers(server);
        });

        io.socket.on('playerConnected', (connectedMessage) => {
          sendRequestAndUpdatePlayers(server);
        })

        io.socket.on('playerDisconnected', (disconnectedMessage) => {
          sendRequestAndUpdatePlayers(server);
        })

      })
    })

    function sendRequestAndUpdateFps(server) {

      let serverId = server.id;
      $.get('/api/sdtdserver/fps', { serverId: serverId }, response => {
        $(`#server-${server.id}-fps`).text(`${response}`)
      })

    }


    function sendRequestAndUpdatePlayers(server) {
      $.ajax({
        url: '/api/sdtdserver/players',
        data: {
          serverId: server.id
        },
        success: (data, status, xhr) => {
          let onlinePlayers = data.players.filter(player => {
            return player.online
          })
          $(`#server-${server.id}-players`).text(`${onlinePlayers.length}`)
        },
        error: (xhr, status, error) => {
          console.log(`Could not update online players! error: ${error}`)
        }
      })
    }

  </script>