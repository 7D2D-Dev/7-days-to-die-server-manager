<!DOCTYPE html>
<html>

<head>
    <title>CSMM</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/importer.css">
    <link rel="stylesheet" href="/styles/main.css">
    <link rel="stylesheet" href="/styles/Pure/base-context-min.css">
    <link rel="stylesheet" href="/styles/Pure/base-context.css">
    <link rel="stylesheet" href="/styles/Pure/base-min.css">
    <link rel="stylesheet" href="/styles/Pure/base.css">
    <link rel="stylesheet" href="/styles/Pure/buttons-core-min.css">
    <link rel="stylesheet" href="/styles/Pure/buttons-core.css">
    <link rel="stylesheet" href="/styles/Pure/buttons-min.css">
    <link rel="stylesheet" href="/styles/Pure/buttons.css">
    <link rel="stylesheet" href="/styles/Pure/forms-min.css">
    <link rel="stylesheet" href="/styles/Pure/forms-nr-min.css">
    <link rel="stylesheet" href="/styles/Pure/forms-nr.css">
    <link rel="stylesheet" href="/styles/Pure/forms.css">
    <link rel="stylesheet" href="/styles/Pure/grids-core-min.css">
    <link rel="stylesheet" href="/styles/Pure/grids-core.css">
    <link rel="stylesheet" href="/styles/Pure/grids-min.css">
    <link rel="stylesheet" href="/styles/Pure/grids-responsive-min.css">
    <link rel="stylesheet" href="/styles/Pure/grids-responsive-old-ie-min.css">
    <link rel="stylesheet" href="/styles/Pure/grids-responsive-old-ie.css">
    <link rel="stylesheet" href="/styles/Pure/grids-responsive.css">
    <link rel="stylesheet" href="/styles/Pure/grids-units-min.css">
    <link rel="stylesheet" href="/styles/Pure/grids-units.css">
    <link rel="stylesheet" href="/styles/Pure/grids.css">
    <link rel="stylesheet" href="/styles/Pure/menus-core-min.css">
    <link rel="stylesheet" href="/styles/Pure/menus-core.css">
    <link rel="stylesheet" href="/styles/Pure/menus-dropdown-min.css">
    <link rel="stylesheet" href="/styles/Pure/menus-dropdown.css">
    <link rel="stylesheet" href="/styles/Pure/menus-horizontal-min.css">
    <link rel="stylesheet" href="/styles/Pure/menus-horizontal.css">
    <link rel="stylesheet" href="/styles/Pure/menus-min.css">
    <link rel="stylesheet" href="/styles/Pure/menus-scrollable-min.css">
    <link rel="stylesheet" href="/styles/Pure/menus-scrollable.css">
    <link rel="stylesheet" href="/styles/Pure/menus-skin-min.css">
    <link rel="stylesheet" href="/styles/Pure/menus-skin.css">
    <link rel="stylesheet" href="/styles/Pure/menus.css">
    <link rel="stylesheet" href="/styles/Pure/pure-min.css">
    <link rel="stylesheet" href="/styles/Pure/pure-nr-min.css">
    <link rel="stylesheet" href="/styles/Pure/pure-nr.css">
    <link rel="stylesheet" href="/styles/Pure/pure.css">
    <link rel="stylesheet" href="/styles/Pure/tables-min.css">
    <link rel="stylesheet" href="/styles/Pure/tables.css">
    <!--STYLES END-->
</head>

<body>

    <%const userServers = getUserServers(req)%>
        <div class="pure-g">

            <!-- Side menu -->
            <div class="pure-u-1-8">
                <!-- Menu toggle -->
                <a href="#menu" id="menuLink" class="menu-link">
                    <!-- Hamburger icon -->
                    <span></span>
                </a>

                <div id="menu">
                    <div class="pure-menu">
                        <a class="pure-menu-heading" href="/">CSMM</a>

                        <ul class="pure-menu-list">
                            <li class="pure-menu-item"><a href="/" class="pure-menu-link">Home</a></li>
                            <li class="pure-menu-item">
                                <a href="/about/" class="pure-menu-link">About</a>
                            </li>

                            <% if (isLoggedIn(req)) { %>

                                <li class="pure-menu-item" class="menu-item-divided pure-menu-selected">
                                    <a href="/addserver/" class="pure-menu-link">Add server</a>
                                </li>

                                <li class="pure-menu-item pure-menu-has-children pure-menu-allow-hover">
                                    <a href="#" id="menuLink1" class="pure-menu-link">Your servers</a>
                                    <ul class="pure-menu-children">
                                        <% if(userServers) { %>
                                            <% _.forIn(userServers, function(server) {  %>
                                                <li class="pure-menu-item">
                                                    <% server %>
                                                        <% const dashboardURL = "/sdtdserver/dashboard/" + server.id; %>
                                                            <a href=<%=dashboardURL %> class="pure-menu-link">
                                                        <% if(server.name) {%>
                                                           <%= server.name %>
                                                           <% } else { %>
                                                            <%= server.ip%>
                                                            <% } %>
                                                    </a>

                                                </li>
                                                <% })%>
                                                    <% } %>
                                    </ul>
                                </li>
                                <li class="pure-menu-item"><a href="/logout/" class="pure-menu-link">Log out</a></li>

                                <% } else {%>
                                    <li class="pure-menu-item"><a href="/login/" class="pure-menu-link">Log in</a></li>
                                    <li class="pure-menu-item"><a href="/signup/" class="pure-menu-link">Register</a></li>
                                    <% } %>
                        </ul>
                    </div>
                </div>
            </div>

            <div class="pure-u-7-8">
                <%- body %>
            </div>
        </div>



        <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like React, Vue.js, Angular, Ember, and Backbone
        require that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different view engine (handlebars, dust, pug/jade, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->


        <!--TEMPLATES-->
        
        <!--TEMPLATES END-->


        <!--
        Server-side View Locals
        ========================

        Sometimes, it's convenient to get access to your server-side view locals from
        client-side JavaScript.  This can improve page load times, remove the need for
        extra AJAX requests, and make your client-side code easier to understand and
        to maintain.  Sails provides a simple mechanism for accessing dynamic view
        locals: the "exposeLocalsToBrowser()" view partial.

        For more information on using this built-in feature, see:
        https://sailsjs.com/docs/concepts/views/locals#?escaping-untrusted-data-using-exposelocalstobrowser

    -->


        <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

        <!--SCRIPTS-->
        <script src="/dependencies/sails.io.js"></script>
        <script src="/js/menus.js"></script>
        <script src="/js/yourservers.js"></script>
        <!--SCRIPTS END-->
</body>

</html>